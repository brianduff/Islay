package org.dubh.islay.hub.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Id;

/**
 * Information about a user of the hub.
 * 
 * @author brianduff
 */
@SuppressWarnings("serial")
public class UserAccount implements Serializable {
  /**
   * The numeric internal identifier of this user. This is automatically
   * generated by AppEngine for persisted entities.
   */
  private @Id Long internalId;
  
  /**
   * The user visible identifier of this user. An openid or an email address.
   */
  private String userId;
  
  /**
   * The name of this user.
   */
  private String name;
  
  /**
   * The email address of this user.
   */
  private String emailAddress;
  
  /**
   * The date this user joined the hub.
   */
  private Date joinDate;
  
  public String getName() {
    return name;
  }

  public UserAccount setName(String name) {
    this.name = name;
    return this;
  }

  public String getEmailAddress() {
    return emailAddress;
  }

  public UserAccount setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  public Date getJoinDate() {
    return joinDate;
  }

  public UserAccount setJoinDate(Date joinDate) {
    this.joinDate = joinDate;
    return this;
  }
  
  public Long getInternalId() {
    return internalId;
  }

  public UserAccount setInternalId(Long internalId) {
    this.internalId = internalId;
    return this;
  }

  public String getUserId() {
    return userId;
  }

  public UserAccount setUserId(String userId) {
    this.userId = userId;
    return this;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result
        + ((emailAddress == null) ? 0 : emailAddress.hashCode());
    result = prime * result
        + ((internalId == null) ? 0 : internalId.hashCode());
    result = prime * result + ((joinDate == null) ? 0 : joinDate.hashCode());
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    result = prime * result + ((userId == null) ? 0 : userId.hashCode());
    return result;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    UserAccount other = (UserAccount) obj;
    if (emailAddress == null) {
      if (other.emailAddress != null)
        return false;
    } else if (!emailAddress.equals(other.emailAddress))
      return false;
    if (internalId == null) {
      if (other.internalId != null)
        return false;
    } else if (!internalId.equals(other.internalId))
      return false;
    if (joinDate == null) {
      if (other.joinDate != null)
        return false;
    } else if (!joinDate.equals(other.joinDate))
      return false;
    if (name == null) {
      if (other.name != null)
        return false;
    } else if (!name.equals(other.name))
      return false;
    if (userId == null) {
      if (other.userId != null)
        return false;
    } else if (!userId.equals(other.userId))
      return false;
    return true;
  }

}
